# Generated by Django 3.2.13 on 2022-04-29 08:51

from django.db import migrations
from django.db.models import F
import uuid

BATCH_SIZE = 10000


def set_checkout_line_token_and_created_at(apps, _schema_editor):
    CheckoutLine = apps.get_model("checkout", "CheckoutLine")
    Checkout = apps.get_model("checkout", "Checkout")

    queryset = CheckoutLine.objects.filter(token__isnull=True)
    for batch_pks in queryset_in_batches(queryset):
        checkout_lines = CheckoutLine.objects.filter(pk__in=batch_pks)
        checkout_in_bulk = Checkout.objects.in_bulk(
            checkout_lines.values_list("checkout_id", flat=True)
        )
        for checkout_line in checkout_lines:
            checkout = checkout_in_bulk.get(checkout_line.checkout_id)
            checkout_line.created_at = checkout.created_at
            checkout_line.token = uuid.uuid4()

        CheckoutLine.objects.bulk_update(checkout_lines, ["token", "created_at"])


def queryset_in_batches(queryset):
    """Slice a queryset into batches.

    Input queryset should be sorted be pk.
    """
    start_pk = 0

    while True:
        qs = queryset.order_by("pk").filter(pk__gt=start_pk)[:BATCH_SIZE]
        pks = list(qs.values_list("pk", flat=True))

        if not pks:
            break

        yield pks

        start_pk = pks[-1]


def set_checkout_line_old_id(apps, schema_editor):
    CheckoutLine = apps.get_model("checkout", "CheckoutLine")
    CheckoutLine.objects.all().update(old_id=F("id"))


class Migration(migrations.Migration):

    dependencies = [
        ("checkout", "0043_add_token_old_id_created_at_to_checkout_line"),
    ]

    operations = [
        migrations.RunPython(
            set_checkout_line_token_and_created_at,
            migrations.RunPython.noop,
        ),
        migrations.RunPython(
            set_checkout_line_old_id, reverse_code=migrations.RunPython.noop
        ),
    ]
