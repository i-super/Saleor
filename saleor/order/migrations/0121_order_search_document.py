# Generated by Django 3.2.6 on 2021-11-19 10:12
import django.contrib.postgres.indexes
import graphene
from django.db import migrations, models

BATCH_SIZE = 10000
ADDRESS_SEARCH_FIELDS = [
    "first_name",
    "last_name",
    "street_address_1",
    "street_address_2",
    "city",
    "postal_code",
    "country",
    "phone",
]


def set_search_document(apps, schema_editor):
    Order = apps.get_model("order", "Order")

    orders = []
    for order in Order.objects.iterator():
        order.search_document = prepare_search_document_value(order)
        orders.append(order)

    Order.objects.bulk_update(orders, ["search_document"], batch_size=BATCH_SIZE)


def prepare_search_document_value(order):
    search_document = f"#{str(order.id)}\n"

    # attach user data
    user_data = order.user_email + "\n"
    if user := order.user:
        user_data += "\n".join(
            [
                getattr(user, field)
                for field in ["email", "first_name", "last_name"]
                if getattr(user, field)
            ]
        )
        user_data += "\n"
    search_document += user_data

    # attach addressess data
    for address_field in ["billing_address", "shipping_address"]:
        if address := getattr(order, address_field):
            for field in ADDRESS_SEARCH_FIELDS:
                if field == "country":
                    search_document += (
                        address.country.name + "\n" + address.country.code + "\n"
                    )
                else:
                    search_document += str(getattr(address, field)) + "\n"

    # attach payments data
    payments_data = ""
    for id, psp_reference in order.payments.values_list("id", "psp_reference"):
        payments_data += graphene.Node.to_global_id("Payment", id) + "\n"
        if psp_reference:
            payments_data += psp_reference + "\n"

    # attach discounts data
    for data in order.discounts.values_list("name", "translated_name"):
        for value in data:
            if value:
                search_document += value + "\n"

    # attach order lines data
    lines_data = "\n".join(
        order.lines.exclude(product_sku__isnull=True).values_list(
            "product_sku", flat=True
        )
    )
    if lines_data:
        search_document += lines_data + "\n"

    return search_document.lower()


class Migration(migrations.Migration):

    dependencies = [
        ("order", "0120_orderline_optional_sku"),
    ]

    operations = [
        migrations.AddField(
            model_name="order",
            name="search_document",
            field=models.TextField(blank=True, default=""),
        ),
        migrations.RunPython(set_search_document, migrations.RunPython.noop),
        migrations.RemoveIndex(
            model_name="order",
            name="order_order_user_em_bda05b_gin",
        ),
        migrations.AddIndex(
            model_name="order",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["search_document"],
                name="order_search_gin",
                opclasses=["gin_trgm_ops"],
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["user_email"],
                name="order_email_search_gin",
                opclasses=["gin_trgm_ops"],
            ),
        ),
    ]
