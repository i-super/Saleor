# Generated by Django 2.2.9 on 2020-01-29 14:15

from django.db import migrations, models, transaction
from django.db.utils import IntegrityError
from django.utils.text import slugify


def create_unique_slug_for_products(apps, schema_editor):
    Product = apps.get_model("product", "Product")

    for product in Product.objects.filter(slug__isnull=True):
        slug = slugify(product.name)
        extension = 1
        slug_value = slug
        while True:
            try:
                with transaction.atomic():
                    product.slug = slug_value
                    product.save(update_fields=["slug"])
                break
            except IntegrityError:
                extension += 1
                slug_value = f"{slug}-{extension}"


class Migration(migrations.Migration):

    dependencies = [
        ("product", "0113_auto_20200129_0717"),
    ]

    operations = [
        migrations.AddField(
            model_name="product",
            name="slug",
            field=models.SlugField(null=True, max_length=255, unique=True),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="product", name="name", field=models.CharField(max_length=250),
        ),
        migrations.RunPython(
            create_unique_slug_for_products, migrations.RunPython.noop
        ),
        migrations.AlterField(
            model_name="product",
            name="slug",
            field=models.SlugField(max_length=255, unique=True),
        ),
    ]
